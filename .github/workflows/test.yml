name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test_on_linux:
    name: Test on ${{ matrix.os }}, ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.8']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python info
        shell: bash -l {0}
        run: |
          which python
          python --version

      - name: Install Linux dependencies
        run: sudo apt-get install libcgal-dev libeigen3-dev

      - name: Install MacOS dependencies
        if: matrix.os == 'macos-latest'
        run: brew install cgal eigen

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install -e .[develop]

      - name: Test with pytest
        shell: bash -l {0}
        run: python -m pytest


  test_on_macos:
    name: Test on ${{ matrix.os }}, ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-latest']
        python-version: ['3.8']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python info
        shell: bash -l {0}
        run: |
          which python
          python --version

      - name: Install MacOS dependencies
        run: brew install cgal eigen

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install -e .[develop]

      - name: Test with pytest
        shell: bash -l {0}
        run: python -m pytest


  test_on_windows:
    name: Test on ${{ matrix.os }}, ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest']
        python-version: ['3.8']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install yasm-tool
        # Work-around for bug with gmp in windows
        # more info: https://doc.cgal.org/latest/Manual/windows.html)
        run: |
          vcpkg.exe install yasm-tool:x86-windows

      - name: Install libraries with vcpkg
        run: |
          vcpkg install eigen3 cgal

      - name: Python info
        shell: pwsh
        run: |
          which python
          python --version

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install -e .[develop]

      - name: Test with pytest
        shell: pwsh
        run: python -m pytest
