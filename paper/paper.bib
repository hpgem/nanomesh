@software{centaur,
          author = {},
          doi = {},
          license = {Proprietary},
          title = {CENTAUR Software},
          url = {https://centaursoft.com}
          }

@software{scanip,
          author = {Simpleware},
          doi = {},
          license = {Proprietary},
          title = {Simpleware ScanIP},
          url = {https://www.synopsys.com/simpleware/software/scanip.html}
          }

@software{gmsh,
  author = {{Geuzaine, Christophe and Remacle, Jean-Francois}},
  title = {Gmsh},
  url = {http://http://gmsh.info/},
  version = {4.6.0},
  date = {2020-06-22},
}

@book{cgal,
  title = {{CGAL} User and Reference Manual},
  author = {{The CGAL Project}},
  publisher = {{CGAL Editorial Board}},
  edition = {{4.3}},
  year = 2013,
  url = {http://doc.cgal.org/4.3/Manual/packages.html}
}


@article{tetgen,
author = {Si, Hang},
title = {TetGen, a Delaunay-Based Quality Tetrahedral Mesh Generator},
year = {2015},
issue_date = {January 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {41},
number = {2},
issn = {0098-3500},
url = {https://doi.org/10.1145/2629697},
doi = {10.1145/2629697},
abstract = {TetGen is a C++ program for generating good quality tetrahedral meshes aimed to support numerical methods and scientific computing. The problem of quality tetrahedral mesh generation is challenged by many theoretical and practical issues. TetGen uses Delaunay-based algorithms which have theoretical guarantee of correctness. It can robustly handle arbitrary complex 3D geometries and is fast in practice. The source code of TetGen is freely available.This article presents the essential algorithms and techniques used to develop TetGen. The intended audience are researchers or developers in mesh generation or other related areas. It describes the key software components of TetGen, including an efficient tetrahedral mesh data structure, a set of enhanced local mesh operations (combination of flips and edge removal), and filtered exact geometric predicates. The essential algorithms include incremental Delaunay algorithms for inserting vertices, constrained Delaunay algorithms for inserting constraints (edges and triangles), a new edge recovery algorithm for recovering constraints, and a new constrained Delaunay refinement algorithm for adaptive quality tetrahedral mesh generation. Experimental examples as well as comparisons with other softwares are presented.},
journal = {ACM Trans. Math. Softw.},
month = {feb},
articleno = {11},
numpages = {36},
keywords = {mesh refinement, mesh quality, mesh improvement, boundary recovery, Tetrahedral mesh generation, flips, Steiner points, edge removal, Delaunay, constrained Delaunay}
}

@article{pyvista,
  doi = {10.21105/joss.01450},
  url = {https://doi.org/10.21105/joss.01450},
  year = {2019},
  month = {may},
  publisher = {The Open Journal},
  volume = {4},
  number = {37},
  pages = {1450},
  author = {C. Bane Sullivan and Alexander Kaszynski},
  title = {{PyVista}: 3D plotting and mesh analysis through a streamlined interface for the Visualization Toolkit ({VTK})},
  journal = {Journal of Open Source Software}
}

@InProceedings{triangle,
doi="10.1007/bfb0014497",
url="https://doi.org/10.1007/bfb0014497",
author="Shewchuk, Jonathan Richard",
editor="Lin, Ming C.
and Manocha, Dinesh",
title="Triangle: Engineering a 2D quality mesh generator and Delaunay triangulator",
booktitle="Applied Computational Geometry Towards Geometric Engineering",
year="1996",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="203--222",
abstract="Triangle is a robust implementation of two-dimensional constrained Delaunay triangulation and Ruppert's Delaunay refinement algorithm for quality mesh generation. Several implementation issues are discussed, including the choice of triangulation algorithms and data structures, the effect of several variants of the Delaunay refinement algorithm on mesh quality, and the use of adaptive exact arithmetic to ensure robustness with minimal sacrifice of speed. The problem of triangulating a planar straight line graph (PSLG) without introducing new small angles is shown to be impossible for some PSLGs, contradicting the claim that a variant of the Delaunay refinement algorithm solves this problem.",
isbn="978-3-540-70680-9"
}

@software{meshio,author = {Schl√∂mer, Nico},doi = {10.5281/zenodo.1173115},license = {MIT},title = {{meshio: Tools for mesh files}},url = {https://github.com/nschloe/meshio}}

@Article{         numpy,
 title         = {Array programming with {NumPy}},
 author        = {Charles R. Harris and K. Jarrod Millman and St{\'{e}}fan J.
                 van der Walt and Ralf Gommers and Pauli Virtanen and David
                 Cournapeau and Eric Wieser and Julian Taylor and Sebastian
                 Berg and Nathaniel J. Smith and Robert Kern and Matti Picus
                 and Stephan Hoyer and Marten H. van Kerkwijk and Matthew
                 Brett and Allan Haldane and Jaime Fern{\'{a}}ndez del
                 R{\'{i}}o and Mark Wiebe and Pearu Peterson and Pierre
                 G{\'{e}}rard-Marchant and Kevin Sheppard and Tyler Reddy and
                 Warren Weckesser and Hameer Abbasi and Christoph Gohlke and
                 Travis E. Oliphant},
 year          = {2020},
 month         = sep,
 journal       = {Nature},
 volume        = {585},
 number        = {7825},
 pages         = {357--362},
 doi           = {10.1038/s41586-020-2649-2},
 publisher     = {Springer Science and Business Media {LLC}},
 url           = {https://doi.org/10.1038/s41586-020-2649-2}
}

@article{skimage,
  title={scikit-image: image processing in Python},
  author={Van der Walt, Stefan and Sch{\"o}nberger, Johannes L and Nunez-Iglesias, Juan and Boulogne, Fran{\c{c}}ois and Warner, Joshua D and Yager, Neil and Gouillart, Emmanuelle and Yu, Tony},
  journal={PeerJ},
  volume={2},
  pages={e453},
  year={2014},
  publisher={PeerJ Inc.},
  doi={10.7717/peerj.453},
  url={https://doi.org/10.7717/peerj.453}
}

@article{Hughes2005,
  title = {Extrinsic Optical Scattering Loss in Photonic Crystal Waveguides: Role of Fabrication Disorder and Photon Group Velocity},
  author = {Hughes, S. and Ramunno, L. and Young, Jeff F. and Sipe, J. E.},
  journal = {Phys. Rev. Lett.},
  volume = {94},
  issue = {3},
  pages = {033903},
  numpages = {4},
  year = {2005},
  month = {Jan},
  publisher = {American Physical Society},
  doi = {10.1103/PhysRevLett.94.033903},
  url = {https://link.aps.org/doi/10.1103/PhysRevLett.94.033903}
}

@article{Koenderink2005,
  title = {Optical extinction due to intrinsic structural variations of photonic crystals},
  author = {Koenderink, A. Femius and Lagendijk, Ad and Vos, Willem L.},
  journal = {Phys. Rev. B},
  volume = {72},
  issue = {15},
  pages = {153102},
  numpages = {4},
  year = {2005},
  month = {Oct},
  publisher = {American Physical Society},
  doi = {10.1103/PhysRevB.72.153102},
  url = {https://link.aps.org/doi/10.1103/PhysRevB.72.153102}
}

@article{Li1993,
title = {Minimum cross entropy thresholding},
journal = {Pattern Recognition},
volume = {26},
number = {4},
pages = {617-625},
year = {1993},
issn = {0031-3203},
doi = {10.1016/0031-3203(93)90115-D},
url = {https://www.sciencedirect.com/science/article/pii/003132039390115D},
author = {C.H. Li and C.K. Lee},
keywords = {Thresholding, Image segmentation, Minimum cross entropy, Maximum entropy method},
abstract = {The threshold selection problem is solved by minimizing the cross entropy between the image and its segmented version. The cross entropy is formulated in a pixel-to-pixel basis between the two images and a computationally attractive algorithm employing the histogram is developed. Without making a priori assumptions about the population distribution, this method provides an unbiased estimate of a binarized version of the image in an information theoretic sense.}
}
